{"ast":null,"code":"export default ((state, props) => {\n  const isNotReadOnly = !props.readOnly;\n  const shouldHideWhenDisabled = props.hidePromptWhenDisabled;\n  const shouldDisableOnProcess = props.disableOnProcess;\n  const isDisabled = props.disabled;\n  const isProcessing = state.processing; // If prompt should be hidden when disabled...\n\n  /* istanbul ignore if: Covered by interactivity tests */\n\n  if (shouldHideWhenDisabled) {\n    if (isDisabled) return false; // ...hide on explicit prop-controlled disable...\n    else if (shouldDisableOnProcess && isProcessing) return false; // ...or when disabling on process is enabled and terminal is processing.\n  } // If no above conditions were met, the read-only state controls whether the prompt should be visible or not\n\n\n  return isNotReadOnly;\n});","map":{"version":3,"sources":["D:/DEV/Github/freezingkas.com/freezingkas/src/components/terminal/utils/shouldPromptBeVisible.js"],"names":["state","props","isNotReadOnly","readOnly","shouldHideWhenDisabled","hidePromptWhenDisabled","shouldDisableOnProcess","disableOnProcess","isDisabled","disabled","isProcessing","processing"],"mappings":"AAAA,gBAAe,CAACA,KAAD,EAAQC,KAAR,KAAkB;AAC/B,QAAMC,aAAa,GAAG,CAACD,KAAK,CAACE,QAA7B;AAEA,QAAMC,sBAAsB,GAAGH,KAAK,CAACI,sBAArC;AACA,QAAMC,sBAAsB,GAAGL,KAAK,CAACM,gBAArC;AACA,QAAMC,UAAU,GAAGP,KAAK,CAACQ,QAAzB;AACA,QAAMC,YAAY,GAAGV,KAAK,CAACW,UAA3B,CAN+B,CAQ/B;;AACA;;AACA,MAAIP,sBAAJ,EAA4B;AAC1B,QAAII,UAAJ,EAAgB,OAAO,KAAP,CAAhB,CAA6B;AAA7B,SACK,IAAIF,sBAAsB,IAAII,YAA9B,EAA4C,OAAO,KAAP,CAFvB,CAEoC;AAC/D,GAb8B,CAe/B;;;AACA,SAAOR,aAAP;AACD,CAjBD","sourcesContent":["export default (state, props) => {\n  const isNotReadOnly = !props.readOnly\n\n  const shouldHideWhenDisabled = props.hidePromptWhenDisabled\n  const shouldDisableOnProcess = props.disableOnProcess\n  const isDisabled = props.disabled\n  const isProcessing = state.processing\n\n  // If prompt should be hidden when disabled...\n  /* istanbul ignore if: Covered by interactivity tests */\n  if (shouldHideWhenDisabled) {\n    if (isDisabled) return false // ...hide on explicit prop-controlled disable...\n    else if (shouldDisableOnProcess && isProcessing) return false // ...or when disabling on process is enabled and terminal is processing.\n  }\n\n  // If no above conditions were met, the read-only state controls whether the prompt should be visible or not\n  return isNotReadOnly\n}\n"]},"metadata":{},"sourceType":"module"}